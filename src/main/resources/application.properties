# Port to run application
server.port=7998

# set to false to see changes without starting app again - Hot Swap
spring.thymeleaf.cache=false


#===============================
# = DATA SOURCE
#===============================

# Set here configurations for the database connection. Database name given after "..localhost:3306/"
spring.datasource.url=jdbc:mysql://localhost:3307/bookstoredatabase

# Username and secret
spring.datasource.username=root
spring.datasource.password=root

# To make sure if the connection is still alive.
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1


#===============================
# = JPA / HIBERNATE
#===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


#===============================
# =MAIL, SMTP PROPERTIES
#===============================

spring.mail.host=smtp.gmail.com
# username -> account email adress (or username) I send the message from, password -> password to this email account
spring.mail.username=codermaestry@gmail.com
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
# username -> account email adress I send the message from
support.email=codermaestry@gmail.com